---
- name: Playbook de compilation IMS
  hosts: zac
  gather_facts: false
  environment: "{{ environment_vars }}"
  vars:
    pgmtocompile: IVTNDB2
    # db2prefix: DB2.V12                      # cas mainplex
    db2prefix: DBC0CFG.DB2.V12              # cas guest zAcademy

  tasks:
    - name: Create temporary directory for the compilation JCL
      ansible.builtin.tempfile:
        state: directory
      register: temp_file_path
      delegate_to: localhost

    # We ask IMS to free the program
    - name: We force MPR to free program ({{ pgmtocompile }})
      ibm.ibm_zos_ims.ims_command:
        command: UPDATE PGM START(REFRESH) NAME({{ pgmtocompile }})
        # command: UPDATE PGM START(REFRESH) NAME(*) OPTION(ALLRSP)
        # command: UPDATE PGM START(REFRESH) NAME(*)
        plex: IMSC
        route: IMC1
      register: imsout1
      ignore_errors: true
    - name: Resultat de Refresh MPR
      ansible.builtin.debug:
        msg:
          - "Message de sortie": "{{ imsout1.msg }}"
          - "{{ imsout1.ims_output[0].type_2_response[0] }}"

    # COBOL compilation: pre-compile & | compilation & linkedit & bind
    - name: Compile templates and put results in temporary directory
      ansible.builtin.template:
        src: "./templates/COIMSDB2_coprocessor.j2"
        dest: "{{ temp_file_path.path }}/COIMSDB2.j2"
        output_encoding: "ASCII"
        mode: '0644'
      delegate_to: localhost
    - name: Submit compile job
      ibm.ibm_zos_core.zos_job_submit:
        src: "{{ temp_file_path.path }}/COIMSDB2.j2"
        location: LOCAL
        wait: true
        wait_time_s: 2
        return_output: true
        encoding:
          from: ISO8859-1
          to: IBM-037
      register: respcompil
    - name: Output Soumission Compil
      ansible.builtin.debug:
        msg: "{{ respcompil.jobs[0].job_id }}"

    - name: Job output
      ibm.ibm_zos_core.zos_job_output:
        job_id: "{{ respcompil.jobs[0].job_id }}"
      register: outputcompil
    - name: Output Compil
      ansible.builtin.debug:
        msg: "{{ outputcompil.jobs[0].ddnames[0].content }}"
