---
- name: Playbook de compilation IMS
  hosts: zAc
  gather_facts: false
  environment: "{{ environment_vars }}"
  vars:
    pgmtocompile: IVTNDB2
    db2prefix: DB2.V12                      # cas mainplex
    # db2prefix: DBC0CFG.DB2.V12              # cas guest zAcademy

  tasks:
    
    # We ask IMS to free the program
    - name: We force MPR to free program ({{ pgmtocompile }})
      ibm.ibm_zos_ims.ims_command:
        command: UPDATE PGM START(REFRESH) NAME({{ pgmtocompile }}) OPTION(ALLRSP)
        # command: UPDATE PGM START(REFRESH) NAME(*) OPTION(ALLRSP)
        # command: UPDATE PGM START(REFRESH) NAME(*)
        plex: IMSC
        route: IMC1
      register: imsout1
      ignore_errors: true
    - name: Resultat de Refresh MPR
      ansible.builtin.debug:
        msg:
          - "Message de sortie": "{{ imsout1.msg }}"
          - "{{ imsout1.ims_output[0].type_2_response[0] }}"

    - name: Create temporary directory for the compilation JCL
      ansible.builtin.tempfile:
        state: directory
      register: temp_file_path
      delegate_to: localhost

    # COBOL compilation: pre-compile & | compilation & linkedit & bind
    - name: Copy a local progam file to a PDS member
      loop:
        - { membre: 'API00I01', fichier: 'API00I01.cpy' }
        - { membre: 'API00P01', fichier: 'API00P01.cpy' }
        - { membre: 'API00Q01', fichier: 'API00Q01.cpy' }
        - { membre: 'BAQHAREC', fichier: 'BAQHAREC.cpy' }
        - { membre: 'BAQHCONC', fichier: 'BAQHCONC.cpy' }
        - { membre: 'IVTNDB2',  fichier: 'IVTNDB2.cbl'  }
        - { membre: 'IVTNDB2C', fichier: 'IVTNDB2C.cpy' }
      ibm.ibm_zos_core.zos_copy:
        src: ./IMS/programs/PhoneBook_Db2/{{ item.fichier }}
        dest: AYMERIC.IMS.SOURCES({{ item.membre }})
        encoding:
          from: UTF-8
          to: IBM-1140
        force: true
        remote_src: false

    - name: Compile templates and put results in temporary directory
      ansible.builtin.template:
        src: "./templates/COIMSDB2_coprocessor.j2"
        dest: "{{ temp_file_path.path }}/COIMSDB2_coprocessor.j2"
        output_encoding: ISO8859-1
        mode: '0644'
      delegate_to: localhost

    - name: Submit compile job
      ibm.ibm_zos_core.zos_job_submit:
        src: "{{ temp_file_path.path }}/COIMSDB2_coprocessor.j2"
        location: local
        wait_time_s: 20
        max_rc: 4
        encoding:
          from: ISO8859-1
          to: IBM-037
      register: respcompil
      ignore_errors: true

    - name: Output Soumission Compil
      ansible.builtin.debug:
        msg: "{{ respcompil.jobs[0].ddnames[0].content }}"

    # - name: Job output
    #   ibm.ibm_zos_core.zos_job_output:
    #     job_id: "{{ respcompil.jobs[0].job_id }}"
    #     ddname: "JESMSGLG"
    #   register: outputjob

    # - name: Output Soumission Compil
    #   ansible.builtin.debug:
    #     msg: "{{ outputjob.jobs[0].ddnames[0].content }}"


