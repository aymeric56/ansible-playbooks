//COMPILDB  JOB MSGLEVEL=1,REGION=0M,NOTIFY=&SYSUID,CLASS=A,MSGCLASS=H
//*     - - -  ADD A JOB CARD ABOVE THIS LINE  - - -
//*
//*  SAMPLE JCL TO PREPARE AN ENTERPRISE COBOL PROGRAM
//*  FOR THE IBM ZSERIES ADFz PRODUCTS:
//*     FAULT ANALYZER, DEBUG TOOL, AND APPLICATION PERF. ANALYZER
//*
//*  NOTES:
//*
//*   COMPILER:
//*    1. A TEST COMPILER PARM IS REQUIRED FOR DEBUG TOOL
//*    2. COMPILER PARM TEST(NOHOOK,SEPARATE,EJPD) HAS ADVANTAGES:
//*         - THE MODULE IS READY FOR DEBUG TOOL
//*         - THE MODULE IS PRODUCTION-READY (NO RUN-TIME OVERHEAD)
//*         - A SYSDEBUG FILE IS CREATED THAT CAN BE USED BY DT,FA,APA
//*    3. COMPILER PARMS LIST,MAP,SOURCE,XREF ARE REQUIRED IF YOU PLAN
//*       TO USE THE COMPILER LISTING WITH FA OR APA, OR IPVLANGX
//*
//*   BINDER (LINKAGE EDITOR):
//*    4. THE INCLUDE FOR MODULE EQAD?CXT IS *OPTIONAL*.  IT IS AN
//*       LE EXIT MODULE THAT CAN BE USED TO START DEBUG TOOL.
//*       UNDERSTAND THE METHODS AVAILABLE FOR STARTING DEBUG TOOL,
//*       AND CHOOSE WHETHER YOU WANT TO USE THE LE EXITS.
//*         IF YOU USE THIS METHOD, LOAD THE CORRECT EXIT MODULE:
//*            EQADBCXT: FOR BATCH PROGRAMS
//*            EQADICXT: FOR ONLINE IMS PROGRAMS
//*            EQADDCXT: FOR DB2 STORED PROCEDURES (OF TYPE MAIN AND SUB)
//*           (for SUB this is supported only for invocations through call_sub)
//*            (DO NOT INCLUDE AN EXIT FOR CICS PROGRAMS)
//*            YOU CAN ALSO USE MODULE EQAD3CXT FOR BATCH PROGRAMS, ONLINE IMS
//*            PROGRAMS, AND DB2 TYPE MAIN STORED PROCEDURES.
//*
//*
//   EXPORT SYMLIST=(MEM,DB2)
//*  SET PARMS FOR THIS COMPILE:
//*  ---------------------------
//   SET MEM=CATALOG                          PROGRAM NAME
//   SET COBOLLIB='COBOL.V6R3.SIGYCOMP'       COBOL COMPILER LOADLIB
//   SET LNGPRFX='COBOL.V6R3'                 COBOL COMPILER LOADLIB
//   SET LELIB='CEE.SCEELKED'                 LE LINKEDIT LIBRARY
//   SET DSPREFIX='TELECOMN.PROJET4'               DATASETs PREFIX
//   SET DB2PREF='DBC0CFG.DB2.V12'
//   SET DB2=DBC1
//*
//*  ***************************************************
//*        COMPILE & DBRM STEP via le coprocesseur
//*  ***************************************************
//COMPILE EXEC PGM=IGYCRCTL,
//             PARM=(OPTFILE)
//STEPLIB DD DISP=SHR,DSNAME=&COBOLLIB.
//        DD DISP=SHR,DSN=&DB2PREF..SDSNEXIT
//        DD DISP=SHR,DSN=&DB2PREF..SDSNLOAD
//SYSLIB  DD DISP=SHR,DSN=&DSPREFIX..SOURCES(&MEM)
//SYSOPTF DD *
    NODYNAM,SOURCE,NOXREF
/*
//DBRMLIB  DD DISP=SHR,DSN=&DSPREFIX..DBRMLIB.DATA(&MEM)
//SYSIN    DD DISP=SHR,DSN=&DSPREFIX..SOURCES(&MEM)
//SYSLIN   DD DSN=&&LOADSET,DISP=(MOD,PASS),UNIT=SYSDA,
//            SPACE=(800,(500,500))
//SYSPRINT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSUT1   DD UNIT=SYSDA,SPACE=(800,(500,500),,,ROUND)
//SYSUT2   DD UNIT=SYSDA,SPACE=(800,(500,500),,,ROUND)
//SYSUT3   DD UNIT=SYSDA,SPACE=(800,(500,500),,,ROUND)
//SYSUT4   DD UNIT=SYSDA,SPACE=(800,(500,500),,,ROUND)
//SYSUT5   DD UNIT=SYSDA,SPACE=(800,(500,500),,,ROUND)
//SYSUT6   DD UNIT=SYSDA,SPACE=(800,(500,500),,,ROUND)
//SYSUT7   DD UNIT=SYSDA,SPACE=(800,(500,500),,,ROUND)
//SYSUT8   DD UNIT=SYSDA,SPACE=(800,(500,500),,,ROUND)
//SYSUT9   DD UNIT=SYSDA,SPACE=(800,(500,500),,,ROUND)
//SYSUT10  DD UNIT=SYSDA,SPACE=(800,(500,500),,,ROUND)
//SYSUT11  DD UNIT=SYSDA,SPACE=(800,(500,500),,,ROUND)
//SYSUT12  DD UNIT=SYSDA,SPACE=(800,(500,500),,,ROUND)
//SYSUT13  DD UNIT=SYSDA,SPACE=(800,(500,500),,,ROUND)
//SYSUT14  DD UNIT=SYSDA,SPACE=(800,(500,500),,,ROUND)
//SYSUT15  DD UNIT=SYSDA,SPACE=(800,(500,500),,,ROUND)
//SYSMDECK DD UNIT=SYSDA,SPACE=(800,(500,500),,,ROUND)
//*  *************************************************************
//*        LINK-EDIT (BINDER) STEP
//*  *************************************************************
//         IF RC <= 4 THEN
//LKED EXEC PGM=IEWBLINK,REGION=0M,COND=(5,LT,COMPILE),
//          PARM='LIST,XREF,RENT'
//SYSLIB   DD DISP=SHR,DSN=&LELIB
//         DD DISP=SHR,DSN=&DB2PREF..SDSNLOAD
//         DD DISP=SHR,DSN=DBC0CFG.RUNLIB.LOAD
//RESLIB   DD DISP=SHR,DSN=IMSCFG.IMC1.SDFSRESL
//SYSLMOD  DD DISP=SHR,DSN=IMSCFG.IMSC.PGMLIB(&MEM)
//SYSLIN   DD DISP=(OLD,DELETE),DSN=&&LOADSET
//         DD DDNAME=SYSIN
//SYSPRINT DD SYSOUT=*
//SYSUT1   DD UNIT=SYSALLDA,SPACE=(CYL,(1,1))
//LKED.SYSIN  DD *,SYMBOLS=EXECSYS
  INCLUDE  RESLIB(CBLTDLI)
  ENTRY    DLITCBL
  NAME     &MEM(R)
/*
//         ENDIF
//*
